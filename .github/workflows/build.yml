name: build

on:
  push:
    branches:
      - master

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ap-northeast-1

jobs:
  Infra:
    name: terraform build and apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@master
  
      - name: Terraform Setup
        working-directory: terraform
        run: |
          curl -O https://releases.hashicorp.com/terraform/0.13.5/terraform_0.13.5_linux_amd64.zip
          unzip terraform_0.13.5_linux_amd64.zip
          terraform init
          terraform plan -no-color
          terraform apply -auto-approve
        env:
          TF_VAR_sfdc_access_token: ${{ secrets.SFDC_ACCESS_TOKEN }}
          TF_VAR_sfdc_consumer_key: ${{ secrets.SFDC_CONSUMER_KEY }}
          TF_VAR_sfdc_consumer_secret: ${{ secrets.SFDC_CONSUMER_SECRET }}
          TF_VAR_sfdc_username: ${{ secrets.SFDC_USERNAME }}
          TF_VAR_sfdc_password: ${{ secrets.SFDC_PASSWORD }}

  App:
    needs:
      - Infrastructure

    name: application build and deploy
    runs-on: ubuntu-latest

    steps:
      # checkout
      - name: Checkout
        uses: actions/checkout@master

      # install nodejs
      - uses: actions/setup-node@master
        with:
          node-version: 12.x

      # set aws credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      # install libraries and build
      - name: install and build
        run: |
          yarn install
          yarn build

      # zip folders
      - name: zip folder
        working-directory: dist
        run: |
          zip -r -j sfCtrTrigger sfCtrTrigger/**
          zip -r -j sfdcInvokeAPI sfdcInvokeAPI/**
          zip -r -j sfIntervalAgent sfIntervalAgent/**
          zip -r -j sfIntervalQueue sfIntervalQueue/**
          zip -r -j sfRealTimeQueueMetrics sfRealTimeQueueMetrics/**
          zip -r -j sfRealTimeQueueMetricsLoop sfRealTimeQueueMetricsLoop/**

      # Lambda Deploy
      - uses: docker://amazon/aws-cli
        with:
          args: lambda update-function-code --function-name bootcamp-sf-ctr-trigger --zip fileb://./dist/sfCtrTrigger.zip
